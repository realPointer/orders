services:
  orders:
    container_name: orders
    build:
      dockerfile: dev.Dockerfile
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - http_main
    ports:
      - "8080:8080"
      - "8081:8081"
    expose:
      - "8080"
      - "8081"
    volumes:
      - .:/app
    env_file:
      - .env

  postgres:
    container_name: postgres
    image: postgres:17.2-alpine3.20
    restart: always
    networks:
      - http_main
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one
    networks:
      - http_main
    ports:
      - "4317:4317"
      - "16686:16686"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - http_main

  zookeeper:
    container_name: zookeeper  
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - http_main

  redpanda-console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.3.3
    networks:
      - http_main
    ports:
      - "8085:8080"
    environment:
      KAFKA_BROKERS: kafka:29092
      REDPANDA_CONSOLE_CONFIG: |
        kafka:
          brokers: ["kafka:29092"]
          schemaRegistry:
            enabled: false
    depends_on:
      - kafka
    restart: unless-stopped

volumes:
  pg_data:
    driver: local

networks:
  http_main:
    driver: bridge
